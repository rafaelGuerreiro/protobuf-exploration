// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: message/request.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Message.Request {

  /// <summary>Holder for reflection information generated from message/request.proto</summary>
  public static partial class RequestReflection {

    #region Descriptor
    /// <summary>File descriptor for message/request.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVtZXNzYWdlL3JlcXVlc3QucHJvdG8SD21lc3NhZ2UucmVxdWVzdBoSbWVz",
            "c2FnZS9jb3JlLnByb3RvIuIBCgdSZXF1ZXN0EgoKAmlkGAEgASgNEioKB3Nl",
            "c3Npb24YAiABKAsyGS5tZXNzYWdlLmNvcmUuVXVpZE1lc3NhZ2USLAoJY2hh",
            "cmFjdGVyGAMgASgLMhkubWVzc2FnZS5jb3JlLlV1aWRNZXNzYWdlEjQKCG1v",
            "dmVtZW50GAUgASgLMiAubWVzc2FnZS5yZXF1ZXN0Lk1vdmVtZW50UmVxdWVz",
            "dEgAEjAKBmZhY2luZxgGIAEoCzIeLm1lc3NhZ2UucmVxdWVzdC5GYWNpbmdS",
            "ZXF1ZXN0SABCCQoHcmVxdWVzdCJACg9Nb3ZlbWVudFJlcXVlc3QSLQoJZGly",
            "ZWN0aW9uGAEgASgOMhoubWVzc2FnZS5yZXF1ZXN0LkRpcmVjdGlvbiI+Cg1G",
            "YWNpbmdSZXF1ZXN0Ei0KCWRpcmVjdGlvbhgBIAEoDjIaLm1lc3NhZ2UucmVx",
            "dWVzdC5EaXJlY3Rpb24qewoJRGlyZWN0aW9uEggKBE5vbmUQABIJCgVOb3J0",
            "aBABEg0KCU5vcnRoRWFzdBADEggKBEVhc3QQAhINCglTb3V0aEVhc3QQBhIJ",
            "CgVTb3V0aBAEEg0KCVNvdXRoV2VzdBAMEggKBFdlc3QQCBINCglOb3J0aFdl",
            "c3QQCUICSAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Message.Core.CoreReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Message.Request.Direction), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Message.Request.Request), global::Message.Request.Request.Parser, new[]{ "Id", "Session", "Character", "Movement", "Facing" }, new[]{ "Request" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Message.Request.MovementRequest), global::Message.Request.MovementRequest.Parser, new[]{ "Direction" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Message.Request.FacingRequest), global::Message.Request.FacingRequest.Parser, new[]{ "Direction" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Direction {
    [pbr::OriginalName("None")] None = 0,
    [pbr::OriginalName("North")] North = 1,
    [pbr::OriginalName("NorthEast")] NorthEast = 3,
    [pbr::OriginalName("East")] East = 2,
    [pbr::OriginalName("SouthEast")] SouthEast = 6,
    [pbr::OriginalName("South")] South = 4,
    [pbr::OriginalName("SouthWest")] SouthWest = 12,
    [pbr::OriginalName("West")] West = 8,
    [pbr::OriginalName("NorthWest")] NorthWest = 9,
  }

  #endregion

  #region Messages
  public sealed partial class Request : pb::IMessage<Request> {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Message.Request.RequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
      id_ = other.id_;
      session_ = other.session_ != null ? other.session_.Clone() : null;
      character_ = other.character_ != null ? other.character_.Clone() : null;
      switch (other.RequestCase) {
        case RequestOneofCase.Movement:
          Movement = other.Movement.Clone();
          break;
        case RequestOneofCase.Facing:
          Facing = other.Facing.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 2;
    private global::Message.Core.UuidMessage session_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Message.Core.UuidMessage Session {
      get { return session_; }
      set {
        session_ = value;
      }
    }

    /// <summary>Field number for the "character" field.</summary>
    public const int CharacterFieldNumber = 3;
    private global::Message.Core.UuidMessage character_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Message.Core.UuidMessage Character {
      get { return character_; }
      set {
        character_ = value;
      }
    }

    /// <summary>Field number for the "movement" field.</summary>
    public const int MovementFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Message.Request.MovementRequest Movement {
      get { return requestCase_ == RequestOneofCase.Movement ? (global::Message.Request.MovementRequest) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.Movement;
      }
    }

    /// <summary>Field number for the "facing" field.</summary>
    public const int FacingFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Message.Request.FacingRequest Facing {
      get { return requestCase_ == RequestOneofCase.Facing ? (global::Message.Request.FacingRequest) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.Facing;
      }
    }

    private object request_;
    /// <summary>Enum of possible cases for the "request" oneof.</summary>
    public enum RequestOneofCase {
      None = 0,
      Movement = 5,
      Facing = 6,
    }
    private RequestOneofCase requestCase_ = RequestOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestOneofCase RequestCase {
      get { return requestCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequest() {
      requestCase_ = RequestOneofCase.None;
      request_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Session, other.Session)) return false;
      if (!object.Equals(Character, other.Character)) return false;
      if (!object.Equals(Movement, other.Movement)) return false;
      if (!object.Equals(Facing, other.Facing)) return false;
      if (RequestCase != other.RequestCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (session_ != null) hash ^= Session.GetHashCode();
      if (character_ != null) hash ^= Character.GetHashCode();
      if (requestCase_ == RequestOneofCase.Movement) hash ^= Movement.GetHashCode();
      if (requestCase_ == RequestOneofCase.Facing) hash ^= Facing.GetHashCode();
      hash ^= (int) requestCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (session_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Session);
      }
      if (character_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Character);
      }
      if (requestCase_ == RequestOneofCase.Movement) {
        output.WriteRawTag(42);
        output.WriteMessage(Movement);
      }
      if (requestCase_ == RequestOneofCase.Facing) {
        output.WriteRawTag(50);
        output.WriteMessage(Facing);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (session_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Session);
      }
      if (character_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Character);
      }
      if (requestCase_ == RequestOneofCase.Movement) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Movement);
      }
      if (requestCase_ == RequestOneofCase.Facing) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Facing);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.session_ != null) {
        if (session_ == null) {
          Session = new global::Message.Core.UuidMessage();
        }
        Session.MergeFrom(other.Session);
      }
      if (other.character_ != null) {
        if (character_ == null) {
          Character = new global::Message.Core.UuidMessage();
        }
        Character.MergeFrom(other.Character);
      }
      switch (other.RequestCase) {
        case RequestOneofCase.Movement:
          if (Movement == null) {
            Movement = new global::Message.Request.MovementRequest();
          }
          Movement.MergeFrom(other.Movement);
          break;
        case RequestOneofCase.Facing:
          if (Facing == null) {
            Facing = new global::Message.Request.FacingRequest();
          }
          Facing.MergeFrom(other.Facing);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            if (session_ == null) {
              Session = new global::Message.Core.UuidMessage();
            }
            input.ReadMessage(Session);
            break;
          }
          case 26: {
            if (character_ == null) {
              Character = new global::Message.Core.UuidMessage();
            }
            input.ReadMessage(Character);
            break;
          }
          case 42: {
            global::Message.Request.MovementRequest subBuilder = new global::Message.Request.MovementRequest();
            if (requestCase_ == RequestOneofCase.Movement) {
              subBuilder.MergeFrom(Movement);
            }
            input.ReadMessage(subBuilder);
            Movement = subBuilder;
            break;
          }
          case 50: {
            global::Message.Request.FacingRequest subBuilder = new global::Message.Request.FacingRequest();
            if (requestCase_ == RequestOneofCase.Facing) {
              subBuilder.MergeFrom(Facing);
            }
            input.ReadMessage(subBuilder);
            Facing = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class MovementRequest : pb::IMessage<MovementRequest> {
    private static readonly pb::MessageParser<MovementRequest> _parser = new pb::MessageParser<MovementRequest>(() => new MovementRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MovementRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Message.Request.RequestReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MovementRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MovementRequest(MovementRequest other) : this() {
      direction_ = other.direction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MovementRequest Clone() {
      return new MovementRequest(this);
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 1;
    private global::Message.Request.Direction direction_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Message.Request.Direction Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MovementRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MovementRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Direction != other.Direction) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Direction != 0) hash ^= Direction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Direction != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Direction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Direction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Direction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MovementRequest other) {
      if (other == null) {
        return;
      }
      if (other.Direction != 0) {
        Direction = other.Direction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Direction = (global::Message.Request.Direction) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FacingRequest : pb::IMessage<FacingRequest> {
    private static readonly pb::MessageParser<FacingRequest> _parser = new pb::MessageParser<FacingRequest>(() => new FacingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FacingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Message.Request.RequestReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FacingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FacingRequest(FacingRequest other) : this() {
      direction_ = other.direction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FacingRequest Clone() {
      return new FacingRequest(this);
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 1;
    private global::Message.Request.Direction direction_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Message.Request.Direction Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FacingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FacingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Direction != other.Direction) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Direction != 0) hash ^= Direction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Direction != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Direction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Direction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Direction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FacingRequest other) {
      if (other == null) {
        return;
      }
      if (other.Direction != 0) {
        Direction = other.Direction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Direction = (global::Message.Request.Direction) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
